version: '3.8'
services:
<<<<<<< HEAD
<<<<<<< HEAD
=======
  angular-container:
    container_name: angular-container
    build: 
      context: ./frontend/ehealthcare-app
      dockerfile: ./Dockerfile
    ports:
      - 80:80
    environment:
      MYSQL_HOST: mysql-container
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3306
    restart: always

  springboot-container:
    container_name: springbboot-container
    image: drugsforall 
    build: 
      context: ./backend/E-Health-Backend (1)/E-Health-Backend
      dockerfile: ./Dockerfile
    environment:
      MYSQL_HOST: mysql-container
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_PORT: 3306
    ports:
      - 9090:9090
    restart: always

>>>>>>> 5373f9bb13d931b88f5632cfea6e30da876494d6
=======
>>>>>>> 1f831c922d2c5532005a1ccd4ce32bd0d7be70c9
  mysql-container:
    image: mysql:8
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ehealthcare
    ports:
      - 3306:3306
    restart: always
    networks:
      - private
    volumes:
      - db:/var/lib/mysql
  springboot-container:
    build: ./backend/E-Health-Backend (1)/E-Health-Backend
    container_name: springboot-container 
    depends_on:
      - mysql-container
    ports:
      - 9090:9090
    restart: always
    networks:
      - public
      - private
  angular-container:
    build: ./frontend/ehealthcare-app
    container_name: angular-container
    ports:
      - 81:80
    networks:
      - public
    depends_on:
      - springboot-container
    restart: always  
networks:
  public:
    name: my-angular-spring-networks
  private:
    name: my-spring-db-networks
volumes:
  db: 
   driver: local
